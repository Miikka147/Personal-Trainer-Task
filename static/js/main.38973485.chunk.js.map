{"version":3,"sources":["components/Navigator.js","components/Editcustomer.js","components/Traininglist.js","components/Customerstrainings.js","components/Addcustomer.js","components/Customerlist.js","components/Events.js","components/Trainingcalendar.js","App.js","serviceWorker.js","index.js"],"names":["Navigator","className","to","id","ButtonGroup","orientation","color","aria-label","Button","variant","Editcustomer","props","React","useState","open","setOpen","firstname","lastname","streetaddress","city","postcode","email","phone","customer","setCustomer","handleClose","handleInputChange","event","target","name","value","onClick","console","log","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","onChange","e","label","fullWidth","DialogActions","updateCustomer","links","href","Traininglist","cars","setCars","useEffect","fetchData","fetch","link","then","response","json","data","content","columns","Header","accessor","Cell","row","d","moment","format","useStyles","makeStyles","theme","appBar","position","title","marginLeft","spacing","flex","Transition","forwardRef","ref","Slide","direction","Customerstrainings","classes","traininglink","fullScreen","TransitionComponent","AppBar","Toolbar","IconButton","edge","Typography","List","Divider","ListItem","button","ListItemText","primary","secondary","Addcustomer","saveCustomer","Customerlist","customers","setCustomers","handleClick","reason","method","headers","body","JSON","stringify","res","catch","err","error","sortable","filterable","original","width","size","window","confirm","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","action","Fragment","Date","Trainingcalendar","allViews","Object","keys","BigCalendar","Views","map","k","App","style","height","events","Trainingevents","step","views","defaultDate","locale","momentLocalizer","Startpage","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38973485.chunk.js","sourcesContent":["import React from 'react';\r\nimport {  Link } from 'react-router-dom'\r\nimport\"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nconst Navigator = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg -light\">\r\n        \r\n                <Link className=\"navbar-brand\" to =\"/\" ></Link>\r\n                <div className=\"collapsenavbar-collapse\" id =\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-navmr-auto\">\r\n                    <ButtonGroup\r\n                    orientation=\"horizontal\"\r\n                    color=\"primary\"\r\n                    aria-label=\"vertical outlined primary button group\">\r\n                   \r\n                    <Button variant=\"outlined\" color=\"primary\">\r\n                        <li \r\n                        className=\"nav -itemactive\">\r\n                        <Link className=\"nav-link\"to=\"/components/Customerlist\"  >Customers</Link>\r\n                            </li>\r\n                            </Button>\r\n                            <Button variant=\"outlined\" color=\"primary\"><li\r\n                             className=\"nav -item\">\r\n                            <Link className=\"nav-link\"to=\"/components/Trainingcalendar\">Calendar</Link>\r\n                            </li>\r\n                            </Button>\r\n                            </ButtonGroup>\r\n    \r\n                                </ul >\r\n                                </div>\r\n                                </nav>\r\n    );\r\n}\r\nexport default Navigator;","import React from 'react';\r\nimport moment from 'moment';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function Editcustomer(props){\r\n    const [open, setOpen] = React.useState(false);\r\n    const [customer, setCustomer] = React.useState({\r\n      firstname: '', lastname: '', streetaddress: '', city: '', postcode: '', email: '', phone: ''\r\n    })\r\n\r\n    const handleClickOpen = () => {\r\n      console.log(props.customer);\r\n        setCustomer({firstname: props.customer.firstname, lastname:props.customer.lastname, streetaddress:props.customer.streetaddress, city:props.customer.city, postcode:props.customer.postcode, email:props.customer.email, phone:props.customer.phone})\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n      setCustomer({...customer, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const updateCustomer = () => {\r\n      props.updateCustomer(customer, props.customer.links[0].href);\r\n      handleClose();\r\n    }\r\n    return(\r\n        <div>\r\n         <Button color=\"primary\" onClick={handleClickOpen}>\r\n            Edit\r\n        </Button>\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Edit Customer</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        name=\"firstname\"\r\n                        value={customer.firstname}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Firstname\"\r\n                        fullWidth\r\n                    />\r\n                     <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        name=\"lastname\"\r\n                        value={customer.lastname}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Lastname\"\r\n                        fullWidth\r\n                    />\r\n                     <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        name=\"streetadress\"\r\n                        value={customer.streetaddress}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Street Address\"\r\n                        fullWidth\r\n                    />\r\n                     <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        name=\"city\"\r\n                        value={customer.city}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"City\"\r\n                        fullWidth\r\n                    />\r\n                     <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        name=\"postcode\"\r\n                        value={customer.postcode}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Postcode\"\r\n                        fullWidth\r\n                    />\r\n                     <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        name=\"email\"\r\n                        value={customer.email}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Email\"\r\n                        fullWidth\r\n                    />\r\n                     <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        name=\"phone\"\r\n                        value={customer.phone}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Phone\"\r\n                        fullWidth\r\n                    />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n          </Button>\r\n          <Button onClick={updateCustomer} color=\"primary\">\r\n             Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n    )\r\n}","import React, { useState, useLayoutEffect, useEffect } from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport moment from 'moment';\r\nimport Editcustomer from './Editcustomer';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\n\r\n\r\nexport default function Traininglist(props) {\r\n    console.log(props);\r\n    const [cars, setCars] = useState([]);\r\n\r\n    useEffect(() => fetchData(), []);\r\n\r\n    const fetchData = () => {\r\n        fetch(props.link)\r\n        .then(response => response.json())\r\n        .then(data => setCars(data.content))\r\n        \r\n    }\r\n    const parseDate = (d) => {if(typeof d !== 'undefined'){\r\n    return(\r\n    <div>{moment(d).format('LL')}</div>\r\n    );}else{\r\n        return(\r\n            <div>No Scheduled appointments</div>\r\n        )\r\n    }\r\n        \r\n    \r\n}\r\n\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            Header: 'Date',\r\n            accessor:'date',\r\n            Cell: row => parseDate(row.value)\r\n        },\r\n        {\r\n            Header: 'Duration',\r\n            accessor: 'duration'\r\n            \r\n        },\r\n        {\r\n            Header: 'Activity',\r\n            accessor: 'activity'\r\n            \r\n        }\r\n       \r\n    ]\r\n\r\n\r\n    return (\r\n        <div>\r\n        \r\n            \r\n            <ReactTable data={cars} columns={columns} />\r\n            \r\n        </div>\r\n    );\r\n}","import React, { useState, useLayoutEffect, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Traininglist from './Traininglist'\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Customerstrainings(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [trainings, setTrainings] = useState([]);\r\n  const [customer, setCustomer] = React.useState({\r\n    firstname: '', lastname: '', streetaddress: '', city: '', postcode: '', email: '', phone: '', traininglink: ''\r\n  })\r\n  const handleClickOpen = () => {\r\n    console.log(props.customer);\r\n    setCustomer({firstname: props.customer.firstname, lastname:props.customer.lastname, streetaddress:props.customer.streetaddress, city:props.customer.city, postcode:props.customer.postcode, email:props.customer.email, phone:props.customer.phone, traininglink:props.customer.links[2].href})\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Trainings\r\n      </Button>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n             \r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Schedule for {customer.firstname} {customer.lastname}\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          <Traininglist link={customer.traininglink}/>\r\n          <Divider />\r\n          <ListItem button>\r\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function Addcustomer(props){\r\n    const [open, setOpen] = React.useState(false);\r\n    const [customer, setCustomer] = React.useState({\r\n      firstname: '', lastname: '', streetaddress: '', city: '', postcode: '', email: '', phone: ''\r\n    })\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n      setCustomer({...customer, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const addCustomer = () => {\r\n      props.saveCustomer(customer);\r\n      handleClose();\r\n    }\r\n    return(\r\n        <div>\r\n       <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>Add Customer</Button>\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">New Customer</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        name=\"firstname\"\r\n                        value={customer.firstname}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Firstname\"\r\n                        fullWidth\r\n                    />\r\n                     <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        name=\"lastname\"\r\n                        value={customer.lastname}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Lastname\"\r\n                        fullWidth\r\n                    />\r\n                     <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        name=\"streetaddress\"\r\n                        value={customer.streetaddress}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Street\"\r\n                        fullWidth\r\n                    />\r\n                     <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        name=\"city\"\r\n                        value={customer.city}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"City\"\r\n                        fullWidth\r\n                    />\r\n                     <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        name=\"postcode\"\r\n                        value={customer.postcode}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Postcode\"\r\n                        fullWidth\r\n                    />\r\n                     <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        name=\"email\"\r\n                        value={customer.email}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Email\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    name=\"phone\"\r\n                    value={customer.phone}\r\n                    onChange={e => handleInputChange(e)}\r\n                    label=\"Phone\"\r\n                    fullWidth\r\n                />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n          </Button>\r\n          <Button onClick={addCustomer} color=\"primary\">\r\n             Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n    )\r\n}","import React, { useState, useLayoutEffect, useEffect } from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Customerstrainings from './Customerstrainings'\r\nimport Addcustomer from './Addcustomer';\r\nimport Editcustomer from './Editcustomer';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\n\r\n\r\nexport default function Customerlist() {\r\n    const [customers, setCustomers] = useState([]);\r\n    const [links, setLinks] = useState([]);\r\n\r\n    useEffect(() => fetchData(), []);\r\n\r\n    const fetchData = () => {\r\n        fetch('https://customerrest.herokuapp.com/api/customers')\r\n        .then(response => response.json())\r\n        .then(data => setCustomers(data.content))\r\n        \r\n    }\r\n    const [open, setOpen] = React.useState(false);\r\n    const deleteCustomer = (link) => {\r\n        if(window.confirm('Are you sure?')){\r\n        fetch(link, {method: 'DELETE'})\r\n        .then(res => fetchData())\r\n        .catch(err => console.error(err))\r\n        handleClick();\r\n        \r\n    }\r\n}\r\nconst handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  \r\n  const saveCustomer = (customer) => {\r\n        fetch('https://customerrest.herokuapp.com/api/customers',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(customer)\r\n        })  \r\n        .then(res => fetchData())\r\n        .catch(err => console.error(err))\r\n  }\r\n  const updateCustomer = (customer, link) => {\r\n      fetch(link, {\r\n      method: 'PUT',\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(customer)\r\n  })  \r\n  .then(res => fetchData())\r\n  .catch(err => console.error(err))\r\n  }\r\n  \r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            Header: 'Firstname',\r\n            accessor: 'firstname'\r\n        },\r\n        {\r\n            Header: 'Lastname',\r\n            accessor: 'lastname'\r\n        },\r\n        {\r\n            sortable: false,\r\n            filterable: false,\r\n            Cell: row => <Customerstrainings customer={row.original}/>\r\n        },\r\n        {\r\n            Header: 'Street',\r\n            accessor: 'city',\r\n            accessor: 'streetaddress'\r\n        },\r\n        {\r\n            Header: 'City',\r\n            accessor: 'city'\r\n        },\r\n        {\r\n            Header: 'Postcode',\r\n            accessor: 'postcode'\r\n        },\r\n        {\r\n            Header: 'Email',\r\n            accessor: 'email'\r\n        },\r\n        {\r\n            Header: 'Phone',\r\n            accessor: 'phone'\r\n        },\r\n        {\r\n            sortable: false,\r\n            filterable: false,\r\n            width: 100,\r\n            Cell: row => <Editcustomer updateCustomer={updateCustomer} customer={row.original}/>\r\n        },\r\n        {\r\n            sortable: false,\r\n            filterable: false,\r\n            width: 100,\r\n            accessor: 'links[0].href',\r\n            Cell: row => <Button size='small' color='secondary' onClick={() =>deleteCustomer(row.value)} >Delete</Button>\r\n        }\r\n    ]\r\n\r\n\r\n    return (\r\n        <div>\r\n              <Addcustomer saveCustomer={saveCustomer}/>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                message=\"Customer Deleted\"\r\n                action={\r\n                    <React.Fragment>\r\n                    <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n                    Close\r\n                    </Button>\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n            <ReactTable filterable={true} data={customers} columns={columns} />\r\n            \r\n        </div>\r\n    );\r\n}","\r\n\r\nexport default[\r\n    {\r\n      'title': 'Spinning',\r\n      'start': new Date(2020, 7, 28,12,0,0),\r\n      'end': new Date(2020, 7, 28,13,0,0)\r\n    },\r\n    {\r\n      'title': 'Training',\r\n      'start': new Date(2020, 7, 29,16,0,0),\r\n      'end': new Date(2020, 7, 29,17,0,0)\r\n    }\r\n  ]","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Trainingevents from './Events';\r\nimport BigCalendar from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\n\r\nmoment.locale('en-GB');\r\nBigCalendar.momentLocalizer(moment);\r\nexport default function Trainingcalendar() {\r\n\r\nconst allViews = Object\r\n  .keys(BigCalendar.Views)\r\n  .map(k => BigCalendar.Views[k])\r\n\r\nconst App = () => (\r\n  <div style={{ height: 700 }}>\r\n    <BigCalendar\r\n      events={Trainingevents}\r\n      step={60}\r\n      views={allViews}\r\n      defaultDate={new Date(2020, 7, 28)}\r\n    />\r\n  </div>\r\n);\r\n\r\nreturn(<App />)\r\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navigator from './components/Navigator';\nimport Customerlist from './components/Customerlist'\nimport Trainingcalendar from './components/Trainingcalendar'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n\nfunction Startpage() {\n  return (\n    <div className=\"Carshop\">\n     \n      <AppBar position=\"static\">\n        <Toolbar>\n       \n         \n          <Typography variant=\"h6\" >\n            Personal Trainer\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <BrowserRouter>\n      <div>\n        <Navigator />\n      \n        <Switch>\n          <Route exact path=\"/components/Customerlist\" component={Customerlist}/>\n          <Route path=\"/components/Trainingcalendar\" component={Trainingcalendar}/>\n               \n        </Switch>\n      </div>\n      </BrowserRouter>\n    </div>\n    \n  );\n}\n\nexport default Startpage;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}